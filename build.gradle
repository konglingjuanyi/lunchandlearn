buildscript {
	ext {
		springBootVersion = '1.3.7.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
//apply plugin: 'war'

jar {
	baseName = 'lunchandlearn'
	version = '1.0'
}

/*
war {
	baseName = 'lunchandlearn'
//	version = '1.0'
}
*/

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile group: 'commons-io', name: 'commons-io', version: '2.4'
	compile('javax.servlet:javax.servlet-api:4.0.0-b01')
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-cache')
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: '1.4.1.RELEASE'
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.ldap:spring-ldap-core:2.1.0.RELEASE')
	// https://mvnrepository.com/artifact/org.springframework.ldap/spring-ldap-core
//	compile ('org.springframework.securistpyspring-security-ldap')

	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'

// https://mvnrepository.com/artifact/com.google.guava/guava
	compile group: 'com.google.guava', name: 'guava', version: '19.0'

	// https://mvnrepository.com/artifact/javax.mail/mail
	compile group: 'javax.mail', name: 'mail', version: '1.4.7'
	compile("org.hibernate:hibernate-validator")
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
/*
configurations {
	providedRuntime
}*/

//compileJava.dependsOn(processResources)

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.13'
}